{"version":3,"sources":["components/Nav.js","components/Resume.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Nav","style","color","textDecoration","react_default","a","createElement","className","react_router_dom","to","Resume","id","projectArr","name","description","url","github","keywords","ProjectCard","props","href","target","Projects","map","project","Home","App","components_Nav","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.384fcba2.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction Nav() {\n  const style = {color: \"white\", textDecoration: 'none'}\n  return (\n    <nav>\n      <h1>Hi</h1>\n      <ul className=\"nav-links\">\n        <Link style={style} to=\"/\">\n          <li className=\"link\">About</li>\n        </Link>\n        <Link style={style} to=\"/resume\">\n          <li className=\"link\">Resume</li>\n        </Link>\n        <Link style={style} to=\"/projects\">\n          <li className=\"link\">Projects</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nfunction Resume() {\n  return (\n    <div id=\"resume\"  className=\"text-container\">\n      <h1>Resume</h1>\n      <div className=\"text-container\">\n        <h2>Education</h2>\n        <p>BA in Economics, University of Montana, 2017</p>\n        <p>BA in Spanish, University of Montana, 2017</p>\n        <p>MA in Economics, University of Montana, 2019</p>\n        <h2>Experience</h2>\n        <p>Graduate Teaching Assistant - University of Montana, August 2017 - May 2019 </p>\n        <p>Digital Media Intern - Montana World Affairs Council, June 2016- May 2017 </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Resume;\n","import React from 'react';\n\nconst projectArr = [\n  {name: \"Ski Searcher\", description: `An interactive leaflet.js map\n    that provides information about North American Ski resorts. If the\n    user clicks on a point in the map in the United States, the app calls\n    the NOAA API to get a forecast for that point.`,\n    url: \"www.averageanalytics.com/snow-forecast\",\n    github: '',\n    keywords: [\"API\", \"Javascript\", \"leaflet.js\"]\n  },\n  {name: \"Census Time Series\", description: `A Javascript application\n    that uses plotly to visualize American Community Survey data from\n     2010 to present.`,\n    url: 'www.averageanalytics.com/census-search/',\n    github: '',\n    keywords: [\"API\", \"data visualization\"]\n  },\n  {name: \"Trump Twittermap\", description: `An R/Shiny application\n    that visualizes the twitter habits of the 45th President of the\n    United States.`,\n    url: '',\n    github: '',\n    keywords: [\"R/Shiny\", \"data visualization\", \"ggplot\"]\n  }\n]\n\nfunction Projects() {\n  return (\n    <div className=\"text-container\">\n      <h1>Projects</h1>\n      {\n        projectArr.map(project => {\n          return new ProjectCard(project)\n        })\n      }\n    </div>\n  );\n}\n\nfunction ProjectCard(props){\n  return (\n    <div className=\"project-card\">\n        <h2 className=\"project-name\">{props.name}</h2>\n        <div className=\"project-card-overlay\">\n        <p className=\"project-description\">{props.description}</p>\n        </div>\n        <div>\n        <a href={\"//\" + props.url} target=\"_blank\"><button>Project</button></a>\n        <a href={props.github}><button>GitHub</button></a>\n        </div>\n    </div>\n  )\n}\n\nexport default Projects;\n","import React from 'react';\nimport './styles/App.min.css';\nimport Nav from './components/Nav'\nimport Resume from './components/Resume'\nimport Projects from './components/Projects'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/resume\" component={Resume}/>\n      <Route path=\"/projects\" component={Projects}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div className=\"text-container\">\n    <h1 id=\"greeting\">Hi! My name is Sam.</h1>\n    <div id=\"about-me\">\n      <p> I'm a web developer and data analyst. </p>\n      <p> I recently graduated from the University of Montana with a Master's degree in Economics. </p>\n      <p> I have experience with HTML, CSS, and Javascript, along with React, and node.js. </p>\n      <p> I use R/Shiny and Stata for more complex data analysis and econometric modeling.</p>\n    </div>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}